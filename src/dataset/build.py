import argparse
from prepare import prepare_dataset
from split import split_dataset

def main():
    parser = argparse.ArgumentParser(description="Dataset pipeline")
    parser.add_argument("--source", default="dataset/ground_truth/images", help="–ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º")
    parser.add_argument("--labels", default="dataset/ground_truth/labels", help="–ü—É—Ç—å –∫ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è–º")
    parser.add_argument("--output", default="dataset/prepared", help="–ö—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    parser.add_argument("--test-size", type=float, default=0.1, help="–†–∞–∑–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–∏")
    parser.add_argument("--val-size", type=float, default=0.15, help="–†–∞–∑–º–µ—Ä –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
    parser.add_argument("--img-size", type=int, default=640, help="–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    args = parser.parse_args()

    print("üîπ –®–∞–≥ 1. –ü—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–∏–Ω–≥...")
    prepare_dataset(args.source, args.labels, args.output, img_size=args.img_size)

    print("üîπ –®–∞–≥ 2. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ...")
    split_dataset(args.output, val_size=args.val_size, test_size=args.test_size)

    print("‚úÖ –î–∞—Ç–∞—Å–µ—Ç –≥–æ—Ç–æ–≤!")

if __name__ == "__main__":
    main()
